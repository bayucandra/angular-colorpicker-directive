{"version":3,"sources":["main.js","color-picker-directive.js","helper-factory.js","slider-directive.js","text-directive.js"],"names":["angular","module","directive","$document","$compile","ColorHelper","restrict","scope","colorPickerModel","colorPickerOutputFormat","controller","$scope","denormalizeRGBA","rgba","r","Math","round","g","b","a","show","sAndLMax","hueMax","alphaMax","type","hsva","h","s","v","hueSlider","left","sAndLSlider","top","alphaSlider","rbgaSteps","hslaSteps","l","cancelButtonClass","showCancelButton","extraLargeClass","hexOnly","parentSelector","colorPresets","hasColorPresets","setSaturation","rg","hsla","hsva2hsla","hsla2hsva","setLightness","setHue","setAlpha","setR","hsvaToRgba","rgbaToHsva","setG","setB","setSaturationAndBrightness","rgX","rgY","update","hslaText","hueRgba","rgbaText","hexText","parseInt","toString","substr","alphaSliderColor","hueSliderColor","outputColor","x","y","alphaInvalidClass","setColorFromHex","string","stringToHsva","typePolicy","link","element","attr","template","initialValue","undefined","val","colorPickerShowValue","colorPickerPosition","colorPickerShowInputSpinner","colorPickerShowCancelButton","colorPickerCancelButtonClass","colorPickerSpinnerRgbaSteps","match","steps","split","colorPickerSpinnerHslaSteps","updateFromString","colorPickerHexOnly","colorPickerParentSelector","document","querySelector","colorPickerColorPresets","color_presets","i","length","color_preset","trim","isHexValid","indexOf","push","e","console","error","message","delayedUpdate","setTimeout","keyup","$apply","open","event","getElementsByClassName","offsetWidth","offsetHeight","setDialogPosition","on","mousedown","window","resize","box","colorPickerFixedPosition","createBox","style","position","height","width","target","parent","child","node","parentNode","isDescendant","off","offset","getBoundingClientRect","pageYOffset","pageXOffset","colorPresetSelect","str","appendChild","$on","cancelColor","resetColor","save","factory","min","abs","max","d","floor","f","p","q","t","stringParsers","re","parse","execResult","isNaN","parseFloat","toLowerCase","key","hasOwnProperty","parser","exec","values","this","test","replace","$window","action","setCursor","mousemove","preventDefault","maxTop","maxLeft","pageX","touches","pageY","$emit","showSpinner","spinner","removeClass","hideSpinner","addClass","value"],"mappings":"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","file":"color-picker.min.js","sourcesContent":["/*\n * Color Picker Angular directive\n *\n * Alberto Pujante\n *\n * @licence: http://opensource.org/licenses/MIT\n */\n\n(function( angular ){\n\n  'use strict';\n\n  angular.module('colorpicker', []);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .directive('colorPicker', ['$document', '$compile', 'ColorHelper', function ($document, $compile, ColorHelper) {\n      return {\n        restrict: 'A',\n        scope: {colorPickerModel: '=', colorPickerOutputFormat: '='},\n\n        controller: ['$scope', function ($scope) {\n          $scope.show = false;\n          $scope.sAndLMax = {};\n          $scope.hueMax = {};\n          $scope.alphaMax = {};\n          $scope.type = 0;\n          $scope.hsva = {h: 0.5, s: 1, v: 1, a: 1};\n          $scope.hueSlider = {left: 0};\n          $scope.sAndLSlider = {left: 0, top: 0};\n          $scope.alphaSlider = {left: 0};\n          $scope.rbgaSteps = {r: 1, g: 1, b: 1, a: 0.1};\n          $scope.hslaSteps = {h: 1, s: 1, l: 1, a: 0.1};\n          $scope.cancelButtonClass = '';\n          $scope.showCancelButton = false;\n          $scope.extraLargeClass = '';\n          $scope.hexOnly = false;\n          $scope.parentSelector = 'body';\n          $scope.colorPresets = [];\n          $scope.hasColorPresets = false;\n\n          if ($scope.colorPickerOutputFormat === 'rgba') {\n            $scope.type = 1;\n          } else if ($scope.colorPickerOutputFormat === 'hsla') {\n            $scope.type = 2;\n          }\n\n          $scope.setSaturation = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.s = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setLightness = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.l = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setHue = function (v, rg) {\n            $scope.hsva.h = v / rg;\n          };\n\n          $scope.setAlpha = function (v, rg) {\n            $scope.hsva.a = v / rg;\n          };\n\n          $scope.setR = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.r = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setG = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.g = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setB = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.b = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setSaturationAndBrightness = function (s, v, rgX, rgY) {\n            $scope.hsva.s = s / rgX;\n            $scope.hsva.v = v / rgY;\n          };\n\n          $scope.update = function () {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            $scope.hslaText = {h: Math.round((hsla.h) * 360), s: Math.round(hsla.s * 100), l: Math.round(hsla.l * 100), a: Math.round(hsla.a * 100) / 100};\n\n            var rgba = denormalizeRGBA(ColorHelper.hsvaToRgba($scope.hsva));\n            var hueRgba = denormalizeRGBA(ColorHelper.hsvaToRgba({h: $scope.hsva.h, s: 1, v: 1, a: 1}));\n\n            $scope.rgbaText = {r: rgba.r, g: rgba.g, b: rgba.b, a: Math.round(rgba.a * 100) / 100};\n            $scope.hexText = '#' + ((1 << 24) | (parseInt(rgba.r, 10) << 16) | (parseInt(rgba.g, 10) << 8) | parseInt(rgba.b, 10)).toString(16).substr(1);\n\n            if ($scope.hexText[1] === $scope.hexText[2] && $scope.hexText[3] === $scope.hexText[4] && $scope.hexText[5] === $scope.hexText[6]) {\n              $scope.hexText = '#' + $scope.hexText[1] + $scope.hexText[3] + $scope.hexText[5];\n            }\n\n            $scope.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n            $scope.hueSliderColor = 'rgb(' + hueRgba.r + ',' + hueRgba.g + ',' + hueRgba.b + ')';\n\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n\n            //var outputFormat = 'rgba';\n            if ($scope.hsva.a < 1) {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsla(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%,' + $scope.hslaText.a + ')';\n                  break;\n                default:\n                  $scope.outputColor = 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + Math.round(rgba.a * 100) / 100 + ')';\n                  break;\n              }\n            } else {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsl(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%)';\n                  break;\n                case 'rgba':\n                  $scope.outputColor = $scope.alphaSliderColor;\n                  break;\n                default:\n                  $scope.outputColor = $scope.hexText;\n                  break;\n              }\n            }\n\n            $scope.sAndLSlider = {left: $scope.hsva.s * $scope.sAndLMax.x - 8 + 'px', top: (1 - $scope.hsva.v) * $scope.sAndLMax.y - 8 + 'px'};\n            $scope.hueSlider.left = ($scope.hsva.h) * $scope.hueMax.x - 8 + 'px';\n            $scope.alphaSlider.left = $scope.hsva.a * $scope.alphaMax.x - 8 + 'px';\n            $scope.alphaInvalidClass = '';\n          };\n\n          $scope.setColorFromHex = function (string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              $scope.hsva = hsva;\n            }\n            return hsva;\n          };\n\n          $scope.typePolicy = function () {\n            $scope.type = ($scope.type + 1) % 3;\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n            return $scope.type;\n          };\n\n          function denormalizeRGBA(rgba) {\n            return {r: Math.round(rgba.r * 255), g: Math.round(rgba.g * 255), b: Math.round(rgba.b * 255), a: rgba.a};\n          }\n\n        }],\n\n\n\n        link: function (scope, element, attr) {\n          var template, close = false, initialValue = '';\n\n          if (scope.colorPickerModel === undefined) {\n            scope.colorPickerModel = '#008fff';\n            element.val('');\n          }\n          if (attr.colorPickerShowValue === undefined) {\n            attr.colorPickerShowValue = 'true';\n          }\n          if (attr.colorPickerPosition === undefined) {\n            attr.colorPickerPosition = 'right';\n          }\n          if (attr.colorPickerShowInputSpinner === undefined) {\n            attr.colorPickerShowInputSpinner = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === undefined) {\n            attr.colorPickerShowCancelButton = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === 'true') {\n            scope.showCancelButton = true;\n            scope.extraLargeClass = 'color-picker-extra-large';\n          }\n          if (attr.colorPickerCancelButtonClass !== undefined) {\n            scope.cancelButtonClass = attr.colorPickerCancelButtonClass;\n          }\n\n          if (attr.colorPickerSpinnerRgbaSteps !== undefined && attr.colorPickerSpinnerRgbaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerRgbaSteps.split(';');\n            scope.rbgaSteps = {r: steps[0], g: steps[1], b: steps[2], a: steps[3]};\n\n          }\n          if (attr.colorPickerSpinnerHslaSteps !== undefined && attr.colorPickerSpinnerHslaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerHslaSteps.split(';');\n            scope.hslaSteps = {h: steps[0], s: steps[1], l: steps[2], a: steps[3]};\n          }\n\n          updateFromString(scope.colorPickerModel);\n          if (attr.colorPickerShowValue === 'true') {\n            element.val(scope.outputColor);\n          }\n\n          if( attr.colorPickerHexOnly === 'true' ) {\n            scope.hexOnly = true;\n          }\n\n          if( attr.colorPickerParentSelector !== undefined && document.querySelector( attr.colorPickerParentSelector ) !== null ) {\n            scope.parentSelector = attr.colorPickerParentSelector;\n          }\n\n          if( attr.colorPickerColorPresets !== undefined ) {\n\n            var color_presets = [];\n\n            try {\n\n              color_presets = attr.colorPickerColorPresets.split( ',' );\n              for( var i=0; i<color_presets.length; i++ ) {\n                var color_preset = ColorHelper.trim( color_presets[i] );\n\n                if( ColorHelper.isHexValid( color_preset ) && scope.colorPresets.indexOf( color_preset ) === -1 ) {\n                  scope.colorPresets.push( color_preset );\n                }\n\n              }\n\n            } catch( e ) {\n              console.error('Error::attr.colorPickerColorPresets: ' + e.message);\n            }\n\n          }\n\n          scope.colorPresetSelect = function( str ){\n            scope.hexText = str;\n            scope.setColorFromHex( str );\n            updateFromString( str );\n\n            if (attr.colorPickerShowValue === 'true') {\n              element.val(str);\n            }\n            scope.colorPickerModel = str;\n            // if( (scope.$root.$$phase !== '$apply') && (scope.$root.$$phase !== '$digest') ) scope.$digest();\n          };\n\n          if( scope.colorPresets.length > 0 ) {scope.hasColorPresets = true;}\n\n          template = angular.element('<div ng-show=\"show\" class=\"color-picker {{extraLargeClass}}\" ng-class=\"{ \\'color-picker--hex-only\\' : hexOnly, \\'color-picker--has-color-presets\\': hasColorPresets }\">' +\n            '   <div class=\"arrow arrow-' + attr.colorPickerPosition + '\"></div>' +\n\n            '   <div slider rg-x=1 rg-y=1 action=\"setSaturationAndBrightness(s, v, rgX, rgY)\" class=\"saturation-lightness\" ng-style=\"{\\'background-color\\':hueSliderColor}\">' +\n            '       <div class=\"cursor-sv\" ng-style=\"{\\'top\\':sAndLSlider.top, \\'left\\':sAndLSlider.left}\"></div>' +\n            '   </div>' +\n\n            '   <div slider rg-x=1 action=\"setHue(v, rg)\" class=\"hue\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':hueSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div slider rg-x=1 action=\"setAlpha(v, rg)\" class=\"alpha\" ng-style=\"{\\'background-color\\':alphaSliderColor}\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':alphaSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div class=\"selected-color-background\"></div>' +\n            '   <div class=\"selected-color\" ng-style=\"{\\'background-color\\':outputColor}\"></div>' +\n\n\n            '   <div ng-show=\"type==2\" class=\"hsla-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"360\" step=\"' + scope.hslaSteps.h + '\" rg=360 action=\"setHue(v, rg)\" ng-model=\"hslaText.h\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.s + '\" rg=100 action=\"setSaturation(v, rg)\" ng-model=\"hslaText.s\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.l + '\" rg=100 action=\"setLightness(v, rg)\" ng-model=\"hslaText.l\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.hslaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"hslaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>H</div><div>S</div><div>L</div><div>A</div>' +\n            '   </div>' +\n\n            '   <div ng-show=\"type==1\" class=\"rgba-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.r + '\" rg=255 action=\"setR(v, rg)\" ng-model=\"rgbaText.r\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.g + '\" rg=255 action=\"setG(v, rg)\" ng-model=\"rgbaText.g\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.b + '\" rg=255 action=\"setB(v, rg)\" ng-model=\"rgbaText.b\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.rbgaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"rgbaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>R</div><div>G</div><div>B</div><div>A</div>' +\n            '   </div>' +\n\n            '   <div class=\"hex-text\" ng-show=\"type==0\">' +\n            '       <input text type=\"text\" action=\"setColorFromHex(string)\" ng-model=\"hexText\"/>' +\n            '       <div>Hex</div>' +\n            '   </div>' +\n\n            '   <div ng-click=\"typePolicy()\" class=\"type-policy\"></div>' +\n\n            '   <div class=\"color-presets\" ng-if=\"hasColorPresets\">' +\n            '     <div class=\"color-presets__title\">Warna Global</div>' +\n            '     <div class=\"color-presets__picker-wrapper\">' +\n            '       <div class=\"preset-picker\" ng-repeat=\"preset in colorPresets\" ng-class=\"{ \\'is-last\\': $last }\" ng-style=\"{ \\'background-color\\': preset }\" ng-click=\"colorPresetSelect( preset )\"></div>' +\n            '     </div>' +\n            '   </div>' +\n\n            '   <div class=\"footer-action\">' +\n            '       <div class=\"reset-btn widget-button-ripple\" ng-click=\"resetColor()\">Reset</div>' +\n            '       <div class=\"save-btn widget-button-ripple\" ng-click=\"save()\">Simpan</div>' +\n            '   </div>' +\n\n            '   <button type=\"button\" class=\"{{cancelButtonClass}}\" ng-show=\"showCancelButton\" ng-click=\"cancelColor()\">Cancel</button>' +\n            '</div>');\n\n          document.querySelector( scope.parentSelector ).appendChild( template[0] );\n\n          // document.getElementsByTagName(\"body\")[0].appendChild(template[0]);\n          $compile(template)(scope);\n\n          function updateFromString(string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              scope.hsva = hsva;\n              scope.update();\n            }\n          }\n\n          element.on('paste', delayedUpdate);\n          function delayedUpdate() {\n            setTimeout(function () {\n              keyup();\n            }, 5);\n          }\n\n          element.on('keyup', keyup);\n          function keyup() {\n            scope.$apply(function () {\n              attr.colorPickerShowValue = 'true';\n              updateFromString(element.val());\n              scope.colorPickerModel = element.val();\n            });\n          }\n\n          scope.$on('color-changed', function (event) {\n            scope.$apply(function () {\n              scope.update();\n              scope.colorPickerModel = scope.outputColor;\n              if (attr.colorPickerShowValue === 'true') {\n                element.val(scope.outputColor);\n              }\n            });\n          });\n\n          scope.cancelColor = function () {\n            scope.colorPickerModel = initialValue;\n            scope.show = false;\n            updateFromString(scope.colorPickerModel);\n            $document.off('mousedown', mousedown);\n            angular.element(window).off('resize', resize);\n          };\n\n          scope.resetColor = function () {\n            scope.colorPickerModel = initialValue;\n            updateFromString(scope.colorPickerModel);\n          };\n\n          scope.save = function(){\n            scope.show = false;\n          };\n\n          element.on('click', open);\n          function open(event) {\n            initialValue = scope.colorPickerModel;\n            scope.$apply(function () {\n              scope.show = true;\n            });\n            scope.$apply(function () {\n              scope.sAndLMax = {x: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetWidth, y: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetHeight};\n              scope.hueMax = {x: template[0].getElementsByClassName(\"hue\")[0].offsetWidth};\n              scope.alphaMax = {x: template[0].getElementsByClassName(\"alpha\")[0].offsetWidth};\n              scope.update();\n            });\n            setDialogPosition();\n            $document.on('mousedown', mousedown);\n            angular.element(window).on('resize', resize);\n          }\n\n          function resize(){\n            setDialogPosition();\n          }\n\n          function setDialogPosition() {\n            var box;\n            if (attr.colorPickerFixedPosition === 'true') {\n              box = createBox(element[0], false);\n              template[0].style.position = \"fixed\";\n            } else {\n              box = createBox(element[0], true);\n            }\n            if (attr.colorPickerPosition === \"left\") {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left - 252) + 'px';\n            } else if (attr.colorPickerPosition === \"top\") {\n              template[0].style.top = (box.top - box.height - 284) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            } else if (attr.colorPickerPosition === \"bottom\") {\n              template[0].style.top = (box.top + box.height + 10) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            }\n            else {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left + box.width) + 'px';\n            }\n          }\n\n          element.on('$destroy', function () {\n            element.off('click', open);\n            element.off('keyup', keyup);\n            element.off('paste', delayedUpdate);\n          });\n\n          function mousedown(event) {\n            if (event.target !== element[0] && template[0] !== event.target && !isDescendant(template[0], event.target)) {\n              scope.$apply(function () {\n                scope.show = false;\n              });\n              $document.off('mousedown', mousedown);\n              angular.element(window).off('resize', resize);\n            }\n          }\n\n          function isDescendant(parent, child) {\n            var node = child.parentNode;\n            while (node !== null) {\n              if (node === parent) {\n                return true;\n              }\n              node = node.parentNode;\n            }\n            return false;\n          }\n\n          function createBox(element, offset) {\n            return {\n              top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n              left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n              width: element.offsetWidth,\n              height: element.offsetHeight\n            };\n          }\n        }};\n    }]);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .factory('ColorHelper', function () {\n\n      return{\n\n        hsla2hsva: function (hsla) {\n          var h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n          if (l === 0) {\n            return {h: h, s: 0, v: 0, a: a};\n          } else {\n            var v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n            return {h: h, s: 2 * (v - l) / v, v: v, a: a};\n          }\n        },\n\n        hsva2hsla: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          if (v === 0) {\n            return {h: h, s: 0, l: 0, a: a};\n          } else if (s === 0 && v === 1) {\n            return {h: h, s: 1, l: 1, a: a};\n          } else {\n            var l = v * (2 - s) / 2;\n            return {h: h, s: v * s / (1 - Math.abs(2 * l - 1)), l: l, a: a};\n          }\n        },\n\n        rgbaToHsva: function (rgba) {\n          var r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n          var max = Math.max(r, g, b), min = Math.min(r, g, b);\n          var h, s, v = max;\n          var d = max - min;\n\n          s = max === 0 ? 0 : d / max;\n          if (max === min) {\n            h = 0; // achromatic\n          } else {\n            switch (max) {\n              case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n              case g:\n                h = (b - r) / d + 2;\n                break;\n              case b:\n                h = (r - g) / d + 4;\n                break;\n            }\n            h /= 6;\n          }\n          return {h: h, s: s, v: v, a: a};\n        },\n\n        hsvaToRgba: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          var r, g, b;\n          var i = Math.floor(h * 6);\n          var f = h * 6 - i;\n          var p = v * (1 - s);\n          var q = v * (1 - f * s);\n          var t = v * (1 - (1 - f) * s);\n\n          switch (i % 6) {\n            case 0:\n              r = v, g = t, b = p;\n              break;\n            case 1:\n              r = q, g = v, b = p;\n              break;\n            case 2:\n              r = p, g = v, b = t;\n              break;\n            case 3:\n              r = p, g = q, b = v;\n              break;\n            case 4:\n              r = t, g = p, b = v;\n              break;\n            case 5:\n              r = v, g = p, b = q;\n              break;\n          }\n          return {r: r, g: g, b: b, a: a};\n        },\n\n        stringToHsva: function (string) {\n          //reg expressions https://github.com/jquery/jquery-color/\n          var stringParsers = [\n            {\n              re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'rgb',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'hsl',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1], 16),\n                  parseInt(execResult[2], 16),\n                  parseInt(execResult[3], 16),\n                  1\n                ];\n              }\n            }\n            , {\n              re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1] + execResult[1], 16),\n                  parseInt(execResult[2] + execResult[2], 16),\n                  parseInt(execResult[3] + execResult[3], 16),\n                  1\n                ];\n              }\n            }\n          ];\n          string = string.toLowerCase();\n          var hsva = null;\n          for (var key in stringParsers) {\n            if (stringParsers.hasOwnProperty(key)) {\n              var parser = stringParsers[key];\n              var match = parser.re.exec(string), values = match && parser.parse(match);\n              if (values) {\n                if (values[0] === 'hex' || values[0] === 'rgb') {\n                  hsva = this.rgbaToHsva({r: values[1] / 255, g: values[2] / 255, b: values[3] / 255, a: values[4]});\n                } else {\n                  hsva = this.hsla2hsva({h: values[1] / 360, s: values[2] / 100, l: values[3] / 100, a: values[4]});\n                }\n                return hsva;\n              }\n            }\n          }\n          return hsva;\n        },\n\n        isHexValid: function( str ) {\n          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test( str );\n        },\n\n        trim: function ( str ) {\n          return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        }\n\n      };\n    });\n\n})(angular);","(function( angular ){\n\n  'use strict';\n\n  angular.module( 'colorpicker' )\n\n    .directive('slider', ['$document', '$window', function ($document, $window) {\n\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n\n        link: function (scope, element, attr) {\n          element.on('mousedown touchstart', mousedown);\n          function mousedown(event) {\n            setCursor(event);\n            $document.on('mousemove touchmove', mousemove);\n          }\n          $document.on('mouseup touchend', function () {\n            $document.off('mousemove touchmove', mousemove);\n          });\n          function mousemove(event) {\n            event.preventDefault();\n            setCursor(event);\n          }\n\n          function setCursor(event) {\n            var maxTop = element[0].offsetHeight;\n            var maxLeft = element[0].offsetWidth;\n            var x = Math.max(0, Math.min(getX(event, element[0]), maxLeft));\n            var y = Math.max(0, Math.min(getY(event, element[0]), maxTop));\n            if (attr.rgX !== undefined && attr.rgY !== undefined) {\n              scope.action({s: x / maxLeft, v: (1 - y / maxTop), rgX: attr.rgX, rgY: attr.rgY});\n            } /*else if (attr.rgX === undefined && attr.rgY !== undefined) {\n                     scope.action({v: y / maxTop, rg: attr.rgY});\n                     }*/ else {\n              scope.action({v: x / maxLeft, rg: attr.rgX});\n            }\n            scope.$emit('color-changed');\n          }\n\n          function getX(event, element) {\n            return (event.pageX !== undefined ? event.pageX : event.touches[0].pageX) - element.getBoundingClientRect().left - $window.pageXOffset;\n          }\n          function getY(event, element) {\n            return (event.pageY !== undefined ? event.pageY : event.touches[0].pageY) - element.getBoundingClientRect().top - $window.pageYOffset;\n          }\n          element.on('$destroy', function () {\n            element.off('mousedown touchend', mousedown);\n          });\n        }};\n\n    }]);\n\n})( angular );","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n\n    .directive( 'text', [function () {\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n        link: function (scope, element, attr) {\n          element.on('paste', delayedUpdate);\n          element.on('keyup', update);\n          element.on('change', update);\n          element.on('focus', showSpinner);\n          element.on('blur', hideSpinner);\n          element.on('mouseover', showSpinner);\n          element.on('mouseout', hideSpinner);\n          element.addClass('color-picker-input-spinner');\n\n          function showSpinner(event) {\n            if (attr.spinner === \"true\") {\n              element.removeClass('color-picker-input-spinner');\n            }\n          }\n\n          function hideSpinner(event) {\n            element.addClass('color-picker-input-spinner');\n          }\n\n          function delayedUpdate(event) {\n            setTimeout(function () {\n              update(event);\n            }, 5);\n          }\n\n          function update(event) {\n            if (attr.rg === undefined) {\n              if (scope.action({string: element.val()})) {\n                scope.$emit('color-changed');\n              }\n            } else {\n              var value = parseFloat(element.val());\n              if (!isNaN(value)) {\n                value = Math.abs(Math.min(parseFloat(element.val()), attr.rg));\n                scope.action({v: value, rg: attr.rg});\n                scope.$emit('color-changed');\n                scope.$emit('alpha-valid');\n              } else {\n                scope.$emit('alpha-invalid');\n              }\n            }\n          }\n          element.on('$destroy', function () {\n            element.off('paste', delayedUpdate);\n            element.off('keyup', update);\n            element.off('change', update);\n            element.off('focus', showSpinner);\n            element.off('blur', hideSpinner);\n            element.off('mouseover', showSpinner);\n            element.off('mouseout', hideSpinner);\n          });\n        }\n      }\n    }]);\n\n})( angular );"]}