{"version":3,"sources":["main.js","color-picker-directive.js","helper-factory.js","slider-directive.js","text-directive.js"],"names":["angular","module","directive","$document","$compile","ColorHelper","restrict","scope","colorPickerModel","colorPickerOutputFormat","controller","$scope","denormalizeRGBA","rgba","r","Math","round","g","b","a","show","sAndLMax","hueMax","alphaMax","type","hsva","h","s","v","hueSlider","left","sAndLSlider","top","alphaSlider","rbgaSteps","hslaSteps","l","cancelButtonClass","showCancelButton","extraLargeClass","hexOnly","parentSelector","colorPreset","setSaturation","rg","hsla","hsva2hsla","hsla2hsva","setLightness","setHue","setAlpha","setR","hsvaToRgba","rgbaToHsva","setG","setB","setSaturationAndBrightness","rgX","rgY","update","hslaText","hueRgba","rgbaText","hexText","parseInt","toString","substr","alphaSliderColor","hueSliderColor","outputColor","x","y","alphaInvalidClass","setColorFromHex","string","stringToHsva","typePolicy","link","element","attr","template","initialValue","undefined","val","colorPickerShowValue","colorPickerPosition","colorPickerShowInputSpinner","colorPickerShowCancelButton","colorPickerCancelButtonClass","colorPickerSpinnerRgbaSteps","match","steps","split","colorPickerSpinnerHslaSteps","updateFromString","delayedUpdate","setTimeout","keyup","$apply","open","event","getElementsByClassName","offsetWidth","offsetHeight","setDialogPosition","on","mousedown","window","resize","box","colorPickerFixedPosition","createBox","style","position","height","width","target","parent","child","node","parentNode","isDescendant","off","offset","getBoundingClientRect","pageYOffset","pageXOffset","colorPickerHexOnly","colorPickerParentSelector","document","querySelector","appendChild","$on","cancelColor","factory","min","abs","max","d","i","floor","f","p","q","t","stringParsers","re","parse","execResult","isNaN","parseFloat","toLowerCase","key","hasOwnProperty","parser","exec","values","this","$window","action","setCursor","mousemove","preventDefault","maxTop","maxLeft","pageX","touches","pageY","$emit","showSpinner","spinner","removeClass","hideSpinner","addClass","value"],"mappings":"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","file":"color-picker.min.js","sourcesContent":["/*\n * Color Picker Angular directive\n *\n * Alberto Pujante\n *\n * @licence: http://opensource.org/licenses/MIT\n */\n\n(function( angular ){\n\n  'use strict';\n\n  angular.module('colorpicker', []);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .directive('colorPicker', ['$document', '$compile', 'ColorHelper', function ($document, $compile, ColorHelper) {\n      return {\n        restrict: 'A',\n        scope: {colorPickerModel: '=', colorPickerOutputFormat: '='},\n\n        controller: ['$scope', function ($scope) {\n          $scope.show = false;\n          $scope.sAndLMax = {};\n          $scope.hueMax = {};\n          $scope.alphaMax = {};\n          $scope.type = 0;\n          $scope.hsva = {h: 0.5, s: 1, v: 1, a: 1};\n          $scope.hueSlider = {left: 0};\n          $scope.sAndLSlider = {left: 0, top: 0};\n          $scope.alphaSlider = {left: 0};\n          $scope.rbgaSteps = {r: 1, g: 1, b: 1, a: 0.1};\n          $scope.hslaSteps = {h: 1, s: 1, l: 1, a: 0.1};\n          $scope.cancelButtonClass = '';\n          $scope.showCancelButton = false;\n          $scope.extraLargeClass = '';\n          $scope.hexOnly = false;\n          $scope.parentSelector = 'body';\n          $scope.colorPreset = [];\n\n          if ($scope.colorPickerOutputFormat === 'rgba') {\n            $scope.type = 1;\n          } else if ($scope.colorPickerOutputFormat === 'hsla') {\n            $scope.type = 2;\n          }\n\n          $scope.setSaturation = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.s = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setLightness = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.l = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setHue = function (v, rg) {\n            $scope.hsva.h = v / rg;\n          };\n\n          $scope.setAlpha = function (v, rg) {\n            $scope.hsva.a = v / rg;\n          };\n\n          $scope.setR = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.r = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setG = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.g = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setB = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.b = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setSaturationAndBrightness = function (s, v, rgX, rgY) {\n            $scope.hsva.s = s / rgX;\n            $scope.hsva.v = v / rgY;\n          };\n\n          $scope.update = function () {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            $scope.hslaText = {h: Math.round((hsla.h) * 360), s: Math.round(hsla.s * 100), l: Math.round(hsla.l * 100), a: Math.round(hsla.a * 100) / 100};\n\n            var rgba = denormalizeRGBA(ColorHelper.hsvaToRgba($scope.hsva));\n            var hueRgba = denormalizeRGBA(ColorHelper.hsvaToRgba({h: $scope.hsva.h, s: 1, v: 1, a: 1}));\n\n            $scope.rgbaText = {r: rgba.r, g: rgba.g, b: rgba.b, a: Math.round(rgba.a * 100) / 100};\n            $scope.hexText = '#' + ((1 << 24) | (parseInt(rgba.r, 10) << 16) | (parseInt(rgba.g, 10) << 8) | parseInt(rgba.b, 10)).toString(16).substr(1);\n\n            if ($scope.hexText[1] === $scope.hexText[2] && $scope.hexText[3] === $scope.hexText[4] && $scope.hexText[5] === $scope.hexText[6]) {\n              $scope.hexText = '#' + $scope.hexText[1] + $scope.hexText[3] + $scope.hexText[5];\n            }\n\n            $scope.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n            $scope.hueSliderColor = 'rgb(' + hueRgba.r + ',' + hueRgba.g + ',' + hueRgba.b + ')';\n\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n\n            //var outputFormat = 'rgba';\n            if ($scope.hsva.a < 1) {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsla(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%,' + $scope.hslaText.a + ')';\n                  break;\n                default:\n                  $scope.outputColor = 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + Math.round(rgba.a * 100) / 100 + ')';\n                  break;\n              }\n            } else {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsl(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%)';\n                  break;\n                case 'rgba':\n                  $scope.outputColor = $scope.alphaSliderColor;\n                  break;\n                default:\n                  $scope.outputColor = $scope.hexText;\n                  break;\n              }\n            }\n\n            $scope.sAndLSlider = {left: $scope.hsva.s * $scope.sAndLMax.x - 8 + 'px', top: (1 - $scope.hsva.v) * $scope.sAndLMax.y - 8 + 'px'};\n            $scope.hueSlider.left = ($scope.hsva.h) * $scope.hueMax.x - 8 + 'px';\n            $scope.alphaSlider.left = $scope.hsva.a * $scope.alphaMax.x - 8 + 'px';\n            $scope.alphaInvalidClass = '';\n          };\n\n          $scope.setColorFromHex = function (string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              $scope.hsva = hsva;\n            }\n            return hsva;\n          };\n\n          $scope.typePolicy = function () {\n            $scope.type = ($scope.type + 1) % 3;\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n            return $scope.type;\n          };\n\n          function denormalizeRGBA(rgba) {\n            return {r: Math.round(rgba.r * 255), g: Math.round(rgba.g * 255), b: Math.round(rgba.b * 255), a: rgba.a};\n          }\n\n        }],\n\n        link: function (scope, element, attr) {\n          var template, close = false, initialValue = '';\n\n          if (scope.colorPickerModel === undefined) {\n            scope.colorPickerModel = '#008fff';\n            element.val('');\n          }\n          if (attr.colorPickerShowValue === undefined) {\n            attr.colorPickerShowValue = 'true';\n          }\n          if (attr.colorPickerPosition === undefined) {\n            attr.colorPickerPosition = 'right';\n          }\n          if (attr.colorPickerShowInputSpinner === undefined) {\n            attr.colorPickerShowInputSpinner = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === undefined) {\n            attr.colorPickerShowCancelButton = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === 'true') {\n            scope.showCancelButton = true;\n            scope.extraLargeClass = 'color-picker-extra-large';\n          }\n          if (attr.colorPickerCancelButtonClass !== undefined) {\n            scope.cancelButtonClass = attr.colorPickerCancelButtonClass;\n          }\n\n          if (attr.colorPickerSpinnerRgbaSteps !== undefined && attr.colorPickerSpinnerRgbaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerRgbaSteps.split(';');\n            scope.rbgaSteps = {r: steps[0], g: steps[1], b: steps[2], a: steps[3]};\n\n          }\n          if (attr.colorPickerSpinnerHslaSteps !== undefined && attr.colorPickerSpinnerHslaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerHslaSteps.split(';');\n            scope.hslaSteps = {h: steps[0], s: steps[1], l: steps[2], a: steps[3]};\n          }\n\n          updateFromString(scope.colorPickerModel);\n          if (attr.colorPickerShowValue === 'true') {\n            element.val(scope.outputColor);\n          }\n\n          if( attr.colorPickerHexOnly === 'true' ) {\n            scope.hexOnly = true;\n          }\n\n          if( attr.colorPickerParentSelector !== undefined && document.querySelector( attr.colorPickerParentSelector ) !== null ) {\n            scope.parentSelector = attr.colorPickerParentSelector;\n          }\n\n          template = angular.element('<div ng-show=\"show\" class=\"color-picker {{extraLargeClass}}\" ng-class=\"{ \\'color-picker--hex-only\\' : hexOnly }\">' +\n            '   <div class=\"arrow arrow-' + attr.colorPickerPosition + '\"></div>' +\n            '   <div slider rg-x=1 rg-y=1 action=\"setSaturationAndBrightness(s, v, rgX, rgY)\" class=\"saturation-lightness\" ng-style=\"{\\'background-color\\':hueSliderColor}\">' +\n            '       <div class=\"cursor-sv\" ng-style=\"{\\'top\\':sAndLSlider.top, \\'left\\':sAndLSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div slider rg-x=1 action=\"setHue(v, rg)\" class=\"hue\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':hueSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div slider rg-x=1 action=\"setAlpha(v, rg)\" class=\"alpha\" ng-style=\"{\\'background-color\\':alphaSliderColor}\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':alphaSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div class=\"selected-color-background\"></div>' +\n            '   <div class=\"selected-color\" ng-style=\"{\\'background-color\\':outputColor}\"></div>' +\n            '   <div ng-show=\"type==2\" class=\"hsla-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"360\" step=\"' + scope.hslaSteps.h + '\" rg=360 action=\"setHue(v, rg)\" ng-model=\"hslaText.h\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.s + '\" rg=100 action=\"setSaturation(v, rg)\" ng-model=\"hslaText.s\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.l + '\" rg=100 action=\"setLightness(v, rg)\" ng-model=\"hslaText.l\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.hslaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"hslaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>H</div><div>S</div><div>L</div><div>A</div>' +\n            '   </div>' +\n            '   <div ng-show=\"type==1\" class=\"rgba-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.r + '\" rg=255 action=\"setR(v, rg)\" ng-model=\"rgbaText.r\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.g + '\" rg=255 action=\"setG(v, rg)\" ng-model=\"rgbaText.g\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.b + '\" rg=255 action=\"setB(v, rg)\" ng-model=\"rgbaText.b\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.rbgaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"rgbaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>R</div><div>G</div><div>B</div><div>A</div>' +\n            '   </div>' +\n            '   <div class=\"hex-text\" ng-show=\"type==0\">' +\n            '       <input text type=\"text\" action=\"setColorFromHex(string)\" ng-model=\"hexText\"/>' +\n            '       <div>HEX</div>' +\n            '   </div>' +\n            '   <div ng-click=\"typePolicy()\" class=\"type-policy\"></div>' +\n            '   <button type=\"button\" class=\"{{cancelButtonClass}}\" ng-show=\"showCancelButton\" ng-click=\"cancelColor()\">Cancel</button>' +\n            '</div>');\n\n          document.querySelector( scope.parentSelector ).appendChild( template[0] );\n\n          // document.getElementsByTagName(\"body\")[0].appendChild(template[0]);\n          $compile(template)(scope);\n\n          function updateFromString(string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              scope.hsva = hsva;\n              scope.update();\n            }\n          }\n\n          element.on('paste', delayedUpdate);\n          function delayedUpdate() {\n            setTimeout(function () {\n              keyup();\n            }, 5);\n          }\n\n          element.on('keyup', keyup);\n          function keyup() {\n            scope.$apply(function () {\n              attr.colorPickerShowValue = 'true';\n              updateFromString(element.val());\n              scope.colorPickerModel = element.val();\n            });\n          }\n\n          scope.$on('color-changed', function (event) {\n            scope.$apply(function () {\n              scope.update();\n              scope.colorPickerModel = scope.outputColor;\n              if (attr.colorPickerShowValue === 'true') {\n                element.val(scope.outputColor);\n              }\n            });\n          });\n\n          scope.cancelColor = function () {\n            scope.colorPickerModel = initialValue;\n            scope.show = false;\n            updateFromString(scope.colorPickerModel);\n            $document.off('mousedown', mousedown);\n            angular.element(window).off('resize', resize);\n          };\n\n          element.on('click', open);\n          function open(event) {\n            initialValue = scope.colorPickerModel;\n            scope.$apply(function () {\n              scope.show = true;\n            });\n            scope.$apply(function () {\n              scope.sAndLMax = {x: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetWidth, y: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetHeight};\n              scope.hueMax = {x: template[0].getElementsByClassName(\"hue\")[0].offsetWidth};\n              scope.alphaMax = {x: template[0].getElementsByClassName(\"alpha\")[0].offsetWidth};\n              scope.update();\n            });\n            setDialogPosition();\n            $document.on('mousedown', mousedown);\n            angular.element(window).on('resize', resize);\n          }\n\n          function resize(){\n            setDialogPosition();\n          }\n\n          function setDialogPosition() {\n            var box;\n            if (attr.colorPickerFixedPosition === 'true') {\n              box = createBox(element[0], false);\n              template[0].style.position = \"fixed\";\n            } else {\n              box = createBox(element[0], true);\n            }\n            if (attr.colorPickerPosition === \"left\") {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left - 252) + 'px';\n            } else if (attr.colorPickerPosition === \"top\") {\n              template[0].style.top = (box.top - box.height - 284) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            } else if (attr.colorPickerPosition === \"bottom\") {\n              template[0].style.top = (box.top + box.height + 10) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            }\n            else {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left + box.width) + 'px';\n            }\n          }\n\n          element.on('$destroy', function () {\n            element.off('click', open);\n            element.off('keyup', keyup);\n            element.off('paste', delayedUpdate);\n          });\n\n          function mousedown(event) {\n            if (event.target !== element[0] && template[0] !== event.target && !isDescendant(template[0], event.target)) {\n              scope.$apply(function () {\n                scope.show = false;\n              });\n              $document.off('mousedown', mousedown);\n              angular.element(window).off('resize', resize);\n            }\n          }\n\n          function isDescendant(parent, child) {\n            var node = child.parentNode;\n            while (node !== null) {\n              if (node === parent) {\n                return true;\n              }\n              node = node.parentNode;\n            }\n            return false;\n          }\n\n          function createBox(element, offset) {\n            return {\n              top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n              left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n              width: element.offsetWidth,\n              height: element.offsetHeight\n            };\n          }\n        }};\n    }]);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .factory('ColorHelper', function () {\n\n      return{\n        hsla2hsva: function (hsla) {\n          var h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n          if (l === 0) {\n            return {h: h, s: 0, v: 0, a: a};\n          } else {\n            var v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n            return {h: h, s: 2 * (v - l) / v, v: v, a: a};\n          }\n        },\n        hsva2hsla: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          if (v === 0) {\n            return {h: h, s: 0, l: 0, a: a};\n          } else if (s === 0 && v === 1) {\n            return {h: h, s: 1, l: 1, a: a};\n          } else {\n            var l = v * (2 - s) / 2;\n            return {h: h, s: v * s / (1 - Math.abs(2 * l - 1)), l: l, a: a};\n          }\n        },\n        rgbaToHsva: function (rgba) {\n          var r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n          var max = Math.max(r, g, b), min = Math.min(r, g, b);\n          var h, s, v = max;\n          var d = max - min;\n\n          s = max === 0 ? 0 : d / max;\n          if (max === min) {\n            h = 0; // achromatic\n          } else {\n            switch (max) {\n              case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n              case g:\n                h = (b - r) / d + 2;\n                break;\n              case b:\n                h = (r - g) / d + 4;\n                break;\n            }\n            h /= 6;\n          }\n          return {h: h, s: s, v: v, a: a};\n        },\n        hsvaToRgba: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          var r, g, b;\n          var i = Math.floor(h * 6);\n          var f = h * 6 - i;\n          var p = v * (1 - s);\n          var q = v * (1 - f * s);\n          var t = v * (1 - (1 - f) * s);\n\n          switch (i % 6) {\n            case 0:\n              r = v, g = t, b = p;\n              break;\n            case 1:\n              r = q, g = v, b = p;\n              break;\n            case 2:\n              r = p, g = v, b = t;\n              break;\n            case 3:\n              r = p, g = q, b = v;\n              break;\n            case 4:\n              r = t, g = p, b = v;\n              break;\n            case 5:\n              r = v, g = p, b = q;\n              break;\n          }\n          return {r: r, g: g, b: b, a: a};\n        },\n        stringToHsva: function (string) {\n          //reg expressions https://github.com/jquery/jquery-color/\n          var stringParsers = [\n            {\n              re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'rgb',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'hsl',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1], 16),\n                  parseInt(execResult[2], 16),\n                  parseInt(execResult[3], 16),\n                  1\n                ];\n              }\n            }\n            , {\n              re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1] + execResult[1], 16),\n                  parseInt(execResult[2] + execResult[2], 16),\n                  parseInt(execResult[3] + execResult[3], 16),\n                  1\n                ];\n              }\n            }\n          ];\n          string = string.toLowerCase();\n          var hsva = null;\n          for (var key in stringParsers) {\n            if (stringParsers.hasOwnProperty(key)) {\n              var parser = stringParsers[key];\n              var match = parser.re.exec(string), values = match && parser.parse(match);\n              if (values) {\n                if (values[0] === 'hex' || values[0] === 'rgb') {\n                  hsva = this.rgbaToHsva({r: values[1] / 255, g: values[2] / 255, b: values[3] / 255, a: values[4]});\n                } else {\n                  hsva = this.hsla2hsva({h: values[1] / 360, s: values[2] / 100, l: values[3] / 100, a: values[4]});\n                }\n                return hsva;\n              }\n            }\n          }\n          return hsva;\n        }\n      };\n    });\n\n})(angular);","(function( angular ){\n\n  'use strict';\n\n  angular.module( 'colorpicker' )\n\n    .directive('slider', ['$document', '$window', function ($document, $window) {\n\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n\n        link: function (scope, element, attr) {\n          element.on('mousedown touchstart', mousedown);\n          function mousedown(event) {\n            setCursor(event);\n            $document.on('mousemove touchmove', mousemove);\n          }\n          $document.on('mouseup touchend', function () {\n            $document.off('mousemove touchmove', mousemove);\n          });\n          function mousemove(event) {\n            event.preventDefault();\n            setCursor(event);\n          }\n\n          function setCursor(event) {\n            var maxTop = element[0].offsetHeight;\n            var maxLeft = element[0].offsetWidth;\n            var x = Math.max(0, Math.min(getX(event, element[0]), maxLeft));\n            var y = Math.max(0, Math.min(getY(event, element[0]), maxTop));\n            if (attr.rgX !== undefined && attr.rgY !== undefined) {\n              scope.action({s: x / maxLeft, v: (1 - y / maxTop), rgX: attr.rgX, rgY: attr.rgY});\n            } /*else if (attr.rgX === undefined && attr.rgY !== undefined) {\n                     scope.action({v: y / maxTop, rg: attr.rgY});\n                     }*/ else {\n              scope.action({v: x / maxLeft, rg: attr.rgX});\n            }\n            scope.$emit('color-changed');\n          }\n\n          function getX(event, element) {\n            return (event.pageX !== undefined ? event.pageX : event.touches[0].pageX) - element.getBoundingClientRect().left - $window.pageXOffset;\n          }\n          function getY(event, element) {\n            return (event.pageY !== undefined ? event.pageY : event.touches[0].pageY) - element.getBoundingClientRect().top - $window.pageYOffset;\n          }\n          element.on('$destroy', function () {\n            element.off('mousedown touchend', mousedown);\n          });\n        }};\n\n    }]);\n\n})( angular );","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n\n    .directive( 'text', [function () {\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n        link: function (scope, element, attr) {\n          element.on('paste', delayedUpdate);\n          element.on('keyup', update);\n          element.on('change', update);\n          element.on('focus', showSpinner);\n          element.on('blur', hideSpinner);\n          element.on('mouseover', showSpinner);\n          element.on('mouseout', hideSpinner);\n          element.addClass('color-picker-input-spinner');\n\n          function showSpinner(event) {\n            if (attr.spinner === \"true\") {\n              element.removeClass('color-picker-input-spinner');\n            }\n          }\n\n          function hideSpinner(event) {\n            element.addClass('color-picker-input-spinner');\n          }\n\n          function delayedUpdate(event) {\n            setTimeout(function () {\n              update(event);\n            }, 5);\n          }\n\n          function update(event) {\n            if (attr.rg === undefined) {\n              if (scope.action({string: element.val()})) {\n                scope.$emit('color-changed');\n              }\n            } else {\n              var value = parseFloat(element.val());\n              if (!isNaN(value)) {\n                value = Math.abs(Math.min(parseFloat(element.val()), attr.rg));\n                scope.action({v: value, rg: attr.rg});\n                scope.$emit('color-changed');\n                scope.$emit('alpha-valid');\n              } else {\n                scope.$emit('alpha-invalid');\n              }\n            }\n          }\n          element.on('$destroy', function () {\n            element.off('paste', delayedUpdate);\n            element.off('keyup', update);\n            element.off('change', update);\n            element.off('focus', showSpinner);\n            element.off('blur', hideSpinner);\n            element.off('mouseover', showSpinner);\n            element.off('mouseout', hideSpinner);\n          });\n        }\n      }\n    }]);\n\n})( angular );"]}