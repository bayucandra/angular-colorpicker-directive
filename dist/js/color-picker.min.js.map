{"version":3,"sources":["main.js","color-picker-directive.js","helper-factory.js","slider-directive.js","text-directive.js"],"names":["angular","module","directive","$document","$compile","ColorHelper","restrict","scope","colorPickerModel","colorPickerOutputFormat","controller","$scope","denormalizeRGBA","rgba","r","Math","round","g","b","a","show","sAndLMax","hueMax","alphaMax","type","hsva","h","s","v","hueSlider","left","sAndLSlider","top","alphaSlider","rbgaSteps","hslaSteps","l","cancelButtonClass","showCancelButton","extraLargeClass","setSaturation","rg","hsla","hsva2hsla","hsla2hsva","setLightness","setHue","setAlpha","setR","hsvaToRgba","rgbaToHsva","setG","setB","setSaturationAndBrightness","rgX","rgY","update","hslaText","hueRgba","rgbaText","hexText","parseInt","toString","substr","alphaSliderColor","hueSliderColor","outputColor","x","y","alphaInvalidClass","setColorFromHex","string","stringToHsva","typePolicy","link","element","attr","template","initialValue","undefined","val","colorPickerShowValue","colorPickerPosition","colorPickerShowInputSpinner","colorPickerShowCancelButton","colorPickerCancelButtonClass","colorPickerSpinnerRgbaSteps","match","steps","split","colorPickerSpinnerHslaSteps","updateFromString","delayedUpdate","setTimeout","keyup","$apply","open","event","getElementsByClassName","offsetWidth","offsetHeight","setDialogPosition","on","mousedown","window","resize","box","colorPickerFixedPosition","createBox","style","position","height","width","target","parent","child","node","parentNode","isDescendant","off","offset","getBoundingClientRect","pageYOffset","pageXOffset","document","getElementsByTagName","appendChild","$on","cancelColor","factory","min","abs","max","d","i","floor","f","p","q","t","stringParsers","re","parse","execResult","isNaN","parseFloat","toLowerCase","key","hasOwnProperty","parser","exec","values","this","$window","action","setCursor","mousemove","preventDefault","maxTop","maxLeft","pageX","touches","pageY","$emit","showSpinner","spinner","removeClass","hideSpinner","addClass","value"],"mappings":"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","file":"color-picker.min.js","sourcesContent":["/*\n * Color Picker Angular directive\n *\n * Alberto Pujante\n *\n * @licence: http://opensource.org/licenses/MIT\n */\n\n(function( angular ){\n\n  'use strict';\n\n  angular.module('colorpicker', []);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .directive('colorPicker', ['$document', '$compile', 'ColorHelper', function ($document, $compile, ColorHelper) {\n      return {\n        restrict: 'A',\n        scope: {colorPickerModel: '=', colorPickerOutputFormat: '='},\n        controller: ['$scope', function ($scope) {\n          $scope.show = false;\n          $scope.sAndLMax = {};\n          $scope.hueMax = {};\n          $scope.alphaMax = {};\n          $scope.type = 0;\n          $scope.hsva = {h: 0.5, s: 1, v: 1, a: 1};\n          $scope.hueSlider = {left: 0};\n          $scope.sAndLSlider = {left: 0, top: 0};\n          $scope.alphaSlider = {left: 0};\n          $scope.rbgaSteps = {r: 1, g: 1, b: 1, a: 0.1};\n          $scope.hslaSteps = {h: 1, s: 1, l: 1, a: 0.1};\n          $scope.cancelButtonClass = '';\n          $scope.showCancelButton = false;\n          $scope.extraLargeClass = '';\n\n          if ($scope.colorPickerOutputFormat === 'rgba') {\n            $scope.type = 1;\n          } else if ($scope.colorPickerOutputFormat === 'hsla') {\n            $scope.type = 2;\n          }\n\n          $scope.setSaturation = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.s = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setLightness = function (v, rg) {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            hsla.l = v / rg;\n            $scope.hsva = ColorHelper.hsla2hsva(hsla);\n          };\n\n          $scope.setHue = function (v, rg) {\n            $scope.hsva.h = v / rg;\n          };\n\n          $scope.setAlpha = function (v, rg) {\n            $scope.hsva.a = v / rg;\n          };\n\n          $scope.setR = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.r = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setG = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.g = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setB = function (v, rg) {\n            var rgba = ColorHelper.hsvaToRgba($scope.hsva);\n            rgba.b = v / rg;\n            $scope.hsva = ColorHelper.rgbaToHsva(rgba);\n          };\n\n          $scope.setSaturationAndBrightness = function (s, v, rgX, rgY) {\n            $scope.hsva.s = s / rgX;\n            $scope.hsva.v = v / rgY;\n          };\n\n          $scope.update = function () {\n            var hsla = ColorHelper.hsva2hsla($scope.hsva);\n            $scope.hslaText = {h: Math.round((hsla.h) * 360), s: Math.round(hsla.s * 100), l: Math.round(hsla.l * 100), a: Math.round(hsla.a * 100) / 100};\n\n            var rgba = denormalizeRGBA(ColorHelper.hsvaToRgba($scope.hsva));\n            var hueRgba = denormalizeRGBA(ColorHelper.hsvaToRgba({h: $scope.hsva.h, s: 1, v: 1, a: 1}));\n\n            $scope.rgbaText = {r: rgba.r, g: rgba.g, b: rgba.b, a: Math.round(rgba.a * 100) / 100};\n            $scope.hexText = '#' + ((1 << 24) | (parseInt(rgba.r, 10) << 16) | (parseInt(rgba.g, 10) << 8) | parseInt(rgba.b, 10)).toString(16).substr(1);\n\n            if ($scope.hexText[1] === $scope.hexText[2] && $scope.hexText[3] === $scope.hexText[4] && $scope.hexText[5] === $scope.hexText[6]) {\n              $scope.hexText = '#' + $scope.hexText[1] + $scope.hexText[3] + $scope.hexText[5];\n            }\n\n            $scope.alphaSliderColor = 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n            $scope.hueSliderColor = 'rgb(' + hueRgba.r + ',' + hueRgba.g + ',' + hueRgba.b + ')';\n\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n\n            //var outputFormat = 'rgba';\n            if ($scope.hsva.a < 1) {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsla(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%,' + $scope.hslaText.a + ')';\n                  break;\n                default:\n                  $scope.outputColor = 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ',' + Math.round(rgba.a * 100) / 100 + ')';\n                  break;\n              }\n            } else {\n              switch ($scope.colorPickerOutputFormat) {\n                case 'hsla':\n                  $scope.outputColor = 'hsl(' + $scope.hslaText.h + ',' + $scope.hslaText.s + '%,' + $scope.hslaText.l + '%)';\n                  break;\n                case 'rgba':\n                  $scope.outputColor = $scope.alphaSliderColor;\n                  break;\n                default:\n                  $scope.outputColor = $scope.hexText;\n                  break;\n              }\n            }\n\n            $scope.sAndLSlider = {left: $scope.hsva.s * $scope.sAndLMax.x - 8 + 'px', top: (1 - $scope.hsva.v) * $scope.sAndLMax.y - 8 + 'px'};\n            $scope.hueSlider.left = ($scope.hsva.h) * $scope.hueMax.x - 8 + 'px';\n            $scope.alphaSlider.left = $scope.hsva.a * $scope.alphaMax.x - 8 + 'px';\n            $scope.alphaInvalidClass = '';\n          };\n\n          $scope.setColorFromHex = function (string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              $scope.hsva = hsva;\n            }\n            return hsva;\n          };\n\n          $scope.typePolicy = function () {\n            $scope.type = ($scope.type + 1) % 3;\n            if ($scope.type === 0 && $scope.hsva.a < 1) {\n              $scope.type++;\n            }\n            return $scope.type;\n          };\n\n          function denormalizeRGBA(rgba) {\n            return {r: Math.round(rgba.r * 255), g: Math.round(rgba.g * 255), b: Math.round(rgba.b * 255), a: rgba.a};\n          }\n\n        }],\n        link: function (scope, element, attr) {\n          var template, close = false, initialValue = '';\n\n          if (scope.colorPickerModel === undefined) {\n            scope.colorPickerModel = '#008fff';\n            element.val('');\n          }\n          if (attr.colorPickerShowValue === undefined) {\n            attr.colorPickerShowValue = 'true';\n          }\n          if (attr.colorPickerPosition === undefined) {\n            attr.colorPickerPosition = 'right';\n          }\n          if (attr.colorPickerShowInputSpinner === undefined) {\n            attr.colorPickerShowInputSpinner = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === undefined) {\n            attr.colorPickerShowCancelButton = 'false';\n          }\n          if (attr.colorPickerShowCancelButton === 'true') {\n            scope.showCancelButton = true;\n            scope.extraLargeClass = 'color-picker-extra-large';\n          }\n          if (attr.colorPickerCancelButtonClass !== undefined) {\n            scope.cancelButtonClass = attr.colorPickerCancelButtonClass;\n          }\n\n          if (attr.colorPickerSpinnerRgbaSteps !== undefined && attr.colorPickerSpinnerRgbaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerRgbaSteps.split(';');\n            scope.rbgaSteps = {r: steps[0], g: steps[1], b: steps[2], a: steps[3]};\n\n          }\n          if (attr.colorPickerSpinnerHslaSteps !== undefined && attr.colorPickerSpinnerHslaSteps.match(/^\\d+;\\d+;\\d+;[0-9]+([\\.][0-9]{1,2})?$/) !== null) {\n            var steps = attr.colorPickerSpinnerHslaSteps.split(';');\n            scope.hslaSteps = {h: steps[0], s: steps[1], l: steps[2], a: steps[3]};\n          }\n\n          updateFromString(scope.colorPickerModel);\n          if (attr.colorPickerShowValue === 'true') {\n            element.val(scope.outputColor);\n          }\n\n          template = angular.element('<div ng-show=\"show\" class=\"color-picker {{extraLargeClass}}\">' +\n            '   <div class=\"arrow arrow-' + attr.colorPickerPosition + '\"></div>' +\n            '   <div slider rg-x=1 rg-y=1 action=\"setSaturationAndBrightness(s, v, rgX, rgY)\" class=\"saturation-lightness\" ng-style=\"{\\'background-color\\':hueSliderColor}\">' +\n            '       <div class=\"cursor-sv\" ng-style=\"{\\'top\\':sAndLSlider.top, \\'left\\':sAndLSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div slider rg-x=1 action=\"setHue(v, rg)\" class=\"hue\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':hueSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div slider rg-x=1 action=\"setAlpha(v, rg)\" class=\"alpha\" ng-style=\"{\\'background-color\\':alphaSliderColor}\">' +\n            '       <div class=\"cursor\" ng-style=\"{\\'left\\':alphaSlider.left}\"></div>' +\n            '   </div>' +\n            '   <div class=\"selected-color-background\"></div>' +\n            '   <div class=\"selected-color\" ng-style=\"{\\'background-color\\':outputColor}\"></div>' +\n            '   <div ng-show=\"type==2\" class=\"hsla-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"360\" step=\"' + scope.hslaSteps.h + '\" rg=360 action=\"setHue(v, rg)\" ng-model=\"hslaText.h\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.s + '\" rg=100 action=\"setSaturation(v, rg)\" ng-model=\"hslaText.s\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"100\" step=\"' + scope.hslaSteps.l + '\" rg=100 action=\"setLightness(v, rg)\" ng-model=\"hslaText.l\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.hslaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"hslaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>H</div><div>S</div><div>L</div><div>A</div>' +\n            '   </div>' +\n            '   <div ng-show=\"type==1\" class=\"rgba-text\">' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.r + '\" rg=255 action=\"setR(v, rg)\" ng-model=\"rgbaText.r\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.g + '\" rg=255 action=\"setG(v, rg)\" ng-model=\"rgbaText.g\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]*\" min=\"0\" max=\"255\" step=\"' + scope.rbgaSteps.b + '\" rg=255 action=\"setB(v, rg)\" ng-model=\"rgbaText.b\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <input text type=\"number\" pattern=\"[0-9]+([\\.,][0-9]{1,2})?\" min=\"0\" max=\"1\" step=\"' + scope.rbgaSteps.a + '\" rg=1 action=\"setAlpha(v, rg)\" ng-model=\"rgbaText.a\" spinner=\"' + attr.colorPickerShowInputSpinner + '\" />' +\n            '       <div>R</div><div>G</div><div>B</div><div>A</div>' +\n            '   </div>' +\n            '   <div class=\"hex-text\" ng-show=\"type==0\">' +\n            '       <input text type=\"text\" action=\"setColorFromHex(string)\" ng-model=\"hexText\"/>' +\n            '       <div>HEX</div>' +\n            '   </div>' +\n            '   <div ng-click=\"typePolicy()\" class=\"type-policy\"></div>' +\n            '   <button type=\"button\" class=\"{{cancelButtonClass}}\" ng-show=\"showCancelButton\" ng-click=\"cancelColor()\">Cancel</button>' +\n            '</div>');\n\n          document.getElementsByTagName(\"body\")[0].appendChild(template[0]);\n          $compile(template)(scope);\n\n          function updateFromString(string) {\n            var hsva = ColorHelper.stringToHsva(string);\n            if (hsva !== null) {\n              scope.hsva = hsva;\n              scope.update();\n            }\n          }\n\n          element.on('paste', delayedUpdate);\n          function delayedUpdate() {\n            setTimeout(function () {\n              keyup();\n            }, 5);\n          }\n\n          element.on('keyup', keyup);\n          function keyup() {\n            scope.$apply(function () {\n              attr.colorPickerShowValue = 'true';\n              updateFromString(element.val());\n              scope.colorPickerModel = element.val();\n            });\n          }\n\n          scope.$on('color-changed', function (event) {\n            scope.$apply(function () {\n              scope.update();\n              scope.colorPickerModel = scope.outputColor;\n              if (attr.colorPickerShowValue === 'true') {\n                element.val(scope.outputColor);\n              }\n            });\n          });\n\n          scope.cancelColor = function () {\n            scope.colorPickerModel = initialValue;\n            scope.show = false;\n            updateFromString(scope.colorPickerModel);\n            $document.off('mousedown', mousedown);\n            angular.element(window).off('resize', resize);\n          };\n\n          element.on('click', open);\n          function open(event) {\n            initialValue = scope.colorPickerModel;\n            scope.$apply(function () {\n              scope.show = true;\n            });\n            scope.$apply(function () {\n              scope.sAndLMax = {x: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetWidth, y: template[0].getElementsByClassName(\"saturation-lightness\")[0].offsetHeight};\n              scope.hueMax = {x: template[0].getElementsByClassName(\"hue\")[0].offsetWidth};\n              scope.alphaMax = {x: template[0].getElementsByClassName(\"alpha\")[0].offsetWidth};\n              scope.update();\n            });\n            setDialogPosition();\n            $document.on('mousedown', mousedown);\n            angular.element(window).on('resize', resize);\n          }\n\n          function resize(){\n            setDialogPosition();\n          }\n\n          function setDialogPosition() {\n            var box;\n            if (attr.colorPickerFixedPosition === 'true') {\n              box = createBox(element[0], false);\n              template[0].style.position = \"fixed\";\n            } else {\n              box = createBox(element[0], true);\n            }\n            if (attr.colorPickerPosition === \"left\") {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left - 252) + 'px';\n            } else if (attr.colorPickerPosition === \"top\") {\n              template[0].style.top = (box.top - box.height - 284) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            } else if (attr.colorPickerPosition === \"bottom\") {\n              template[0].style.top = (box.top + box.height + 10) + 'px';\n              template[0].style.left = (box.left) + 'px';\n            }\n            else {\n              template[0].style.top = box.top + 'px';\n              template[0].style.left = (box.left + box.width) + 'px';\n            }\n          }\n\n          element.on('$destroy', function () {\n            element.off('click', open);\n            element.off('keyup', keyup);\n            element.off('paste', delayedUpdate);\n          });\n\n          function mousedown(event) {\n            if (event.target !== element[0] && template[0] !== event.target && !isDescendant(template[0], event.target)) {\n              scope.$apply(function () {\n                scope.show = false;\n              });\n              $document.off('mousedown', mousedown);\n              angular.element(window).off('resize', resize);\n            }\n          }\n\n          function isDescendant(parent, child) {\n            var node = child.parentNode;\n            while (node !== null) {\n              if (node === parent) {\n                return true;\n              }\n              node = node.parentNode;\n            }\n            return false;\n          }\n\n          function createBox(element, offset) {\n            return {\n              top: element.getBoundingClientRect().top + (offset ? window.pageYOffset : 0),\n              left: element.getBoundingClientRect().left + (offset ? window.pageXOffset : 0),\n              width: element.offsetWidth,\n              height: element.offsetHeight\n            };\n          }\n        }};\n    }]);\n\n})(angular);","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n    .factory('ColorHelper', function () {\n\n      return{\n        hsla2hsva: function (hsla) {\n          var h = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1), a = Math.min(hsla.a, 1);\n          if (l === 0) {\n            return {h: h, s: 0, v: 0, a: a};\n          } else {\n            var v = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n            return {h: h, s: 2 * (v - l) / v, v: v, a: a};\n          }\n        },\n        hsva2hsla: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          if (v === 0) {\n            return {h: h, s: 0, l: 0, a: a};\n          } else if (s === 0 && v === 1) {\n            return {h: h, s: 1, l: 1, a: a};\n          } else {\n            var l = v * (2 - s) / 2;\n            return {h: h, s: v * s / (1 - Math.abs(2 * l - 1)), l: l, a: a};\n          }\n        },\n        rgbaToHsva: function (rgba) {\n          var r = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1), a = Math.min(rgba.a, 1);\n          var max = Math.max(r, g, b), min = Math.min(r, g, b);\n          var h, s, v = max;\n          var d = max - min;\n\n          s = max === 0 ? 0 : d / max;\n          if (max === min) {\n            h = 0; // achromatic\n          } else {\n            switch (max) {\n              case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n              case g:\n                h = (b - r) / d + 2;\n                break;\n              case b:\n                h = (r - g) / d + 4;\n                break;\n            }\n            h /= 6;\n          }\n          return {h: h, s: s, v: v, a: a};\n        },\n        hsvaToRgba: function (hsva) {\n          var h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n          var r, g, b;\n          var i = Math.floor(h * 6);\n          var f = h * 6 - i;\n          var p = v * (1 - s);\n          var q = v * (1 - f * s);\n          var t = v * (1 - (1 - f) * s);\n\n          switch (i % 6) {\n            case 0:\n              r = v, g = t, b = p;\n              break;\n            case 1:\n              r = q, g = v, b = p;\n              break;\n            case 2:\n              r = p, g = v, b = t;\n              break;\n            case 3:\n              r = p, g = q, b = v;\n              break;\n            case 4:\n              r = t, g = p, b = v;\n              break;\n            case 5:\n              r = v, g = p, b = q;\n              break;\n          }\n          return {r: r, g: g, b: b, a: a};\n        },\n        stringToHsva: function (string) {\n          //reg expressions https://github.com/jquery/jquery-color/\n          var stringParsers = [\n            {\n              re: /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'rgb',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/,\n              parse: function (execResult) {\n                return [\n                  'hsl',\n                  parseInt(execResult[2]),\n                  parseInt(execResult[3]),\n                  parseInt(execResult[4]),\n                  isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5])\n                ];\n              }\n            },\n            {\n              re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1], 16),\n                  parseInt(execResult[2], 16),\n                  parseInt(execResult[3], 16),\n                  1\n                ];\n              }\n            }\n            , {\n              re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n              parse: function (execResult) {\n                return [\n                  'hex',\n                  parseInt(execResult[1] + execResult[1], 16),\n                  parseInt(execResult[2] + execResult[2], 16),\n                  parseInt(execResult[3] + execResult[3], 16),\n                  1\n                ];\n              }\n            }\n          ];\n          string = string.toLowerCase();\n          var hsva = null;\n          for (var key in stringParsers) {\n            if (stringParsers.hasOwnProperty(key)) {\n              var parser = stringParsers[key];\n              var match = parser.re.exec(string), values = match && parser.parse(match);\n              if (values) {\n                if (values[0] === 'hex' || values[0] === 'rgb') {\n                  hsva = this.rgbaToHsva({r: values[1] / 255, g: values[2] / 255, b: values[3] / 255, a: values[4]});\n                } else {\n                  hsva = this.hsla2hsva({h: values[1] / 360, s: values[2] / 100, l: values[3] / 100, a: values[4]});\n                }\n                return hsva;\n              }\n            }\n          }\n          return hsva;\n        }\n      };\n    });\n\n})(angular);","(function( angular ){\n\n  'use strict';\n\n  angular.module( 'colorpicker' )\n\n    .directive('slider', ['$document', '$window', function ($document, $window) {\n\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n\n        link: function (scope, element, attr) {\n          element.on('mousedown touchstart', mousedown);\n          function mousedown(event) {\n            setCursor(event);\n            $document.on('mousemove touchmove', mousemove);\n          }\n          $document.on('mouseup touchend', function () {\n            $document.off('mousemove touchmove', mousemove);\n          });\n          function mousemove(event) {\n            event.preventDefault();\n            setCursor(event);\n          }\n\n          function setCursor(event) {\n            var maxTop = element[0].offsetHeight;\n            var maxLeft = element[0].offsetWidth;\n            var x = Math.max(0, Math.min(getX(event, element[0]), maxLeft));\n            var y = Math.max(0, Math.min(getY(event, element[0]), maxTop));\n            if (attr.rgX !== undefined && attr.rgY !== undefined) {\n              scope.action({s: x / maxLeft, v: (1 - y / maxTop), rgX: attr.rgX, rgY: attr.rgY});\n            } /*else if (attr.rgX === undefined && attr.rgY !== undefined) {\n                     scope.action({v: y / maxTop, rg: attr.rgY});\n                     }*/ else {\n              scope.action({v: x / maxLeft, rg: attr.rgX});\n            }\n            scope.$emit('color-changed');\n          }\n\n          function getX(event, element) {\n            return (event.pageX !== undefined ? event.pageX : event.touches[0].pageX) - element.getBoundingClientRect().left - $window.pageXOffset;\n          }\n          function getY(event, element) {\n            return (event.pageY !== undefined ? event.pageY : event.touches[0].pageY) - element.getBoundingClientRect().top - $window.pageYOffset;\n          }\n          element.on('$destroy', function () {\n            element.off('mousedown touchend', mousedown);\n          });\n        }};\n\n    }]);\n\n})( angular );","(function( angular ){\n  'use strict';\n\n  angular.module('colorpicker')\n\n    .directive( 'text', [function () {\n      return {\n        restrict: 'A',\n        scope: {\n          action: '&'\n        },\n        link: function (scope, element, attr) {\n          element.on('paste', delayedUpdate);\n          element.on('keyup', update);\n          element.on('change', update);\n          element.on('focus', showSpinner);\n          element.on('blur', hideSpinner);\n          element.on('mouseover', showSpinner);\n          element.on('mouseout', hideSpinner);\n          element.addClass('color-picker-input-spinner');\n\n          function showSpinner(event) {\n            if (attr.spinner === \"true\") {\n              element.removeClass('color-picker-input-spinner');\n            }\n          }\n\n          function hideSpinner(event) {\n            element.addClass('color-picker-input-spinner');\n          }\n\n          function delayedUpdate(event) {\n            setTimeout(function () {\n              update(event);\n            }, 5);\n          }\n\n          function update(event) {\n            if (attr.rg === undefined) {\n              if (scope.action({string: element.val()})) {\n                scope.$emit('color-changed');\n              }\n            } else {\n              var value = parseFloat(element.val());\n              if (!isNaN(value)) {\n                value = Math.abs(Math.min(parseFloat(element.val()), attr.rg));\n                scope.action({v: value, rg: attr.rg});\n                scope.$emit('color-changed');\n                scope.$emit('alpha-valid');\n              } else {\n                scope.$emit('alpha-invalid');\n              }\n            }\n          }\n          element.on('$destroy', function () {\n            element.off('paste', delayedUpdate);\n            element.off('keyup', update);\n            element.off('change', update);\n            element.off('focus', showSpinner);\n            element.off('blur', hideSpinner);\n            element.off('mouseover', showSpinner);\n            element.off('mouseout', hideSpinner);\n          });\n        }\n      }\n    }]);\n\n})( angular );"]}